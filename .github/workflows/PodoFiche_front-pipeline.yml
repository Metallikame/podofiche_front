name: CI/CD Pipeline podofiche_front

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  validate_commits:
    name: Validate Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install commitlint
        run: npm install -g commitlint @commitlint/config-conventional
      - name: Check commit messages
        run: |
          git fetch origin main
          git log origin/main..HEAD --pretty=format:%s | npx commitlint --config @commitlint/config-conventional || echo "⚠️ Commitlint warnings"

  build:
    name: Build React App
    runs-on: ubuntu-latest
    needs: validate_commits
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build app
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-app-build
          path: build

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test -- --watchAll=false

  release_notes:
    name: Generate Release Notes
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Generate release notes
        run: |
          echo "## Release Notes" > release_notes.md
          git fetch --tags
          git log --pretty=format:"* %s (%an)" $(git describe --tags --abbrev=0)..HEAD >> release_notes.md
          cat release_notes.md
      - name: Upload release notes
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release_notes.md

  send_discord_notification:
    name: Discord Notification on Failure
    runs-on: ubuntu-latest
    needs: [test, release_notes]
    if: failure()
    steps:
      - name: Send Discord notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          CI_PROJECT_NAME: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          CI_RUN_ID: ${{ github.run_id }}
          CI_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          payload=$(cat <<EOF
          {
            "content": "@everyone ❌ CI/CD FAILED sur le projet \"$CI_PROJECT_NAME\" !",
            "embeds": [{
              "title": "CI/CD échoué 🚨",
              "description": "Voir le rapport GitHub Actions pour plus de détails.",
              "color": 16711680,
              "fields": [
                {
                  "name": "Projet",
                  "value": "$CI_PROJECT_NAME",
                  "inline": true
                },
                {
                  "name": "Auteur",
                  "value": "$GITHUB_ACTOR",
                  "inline": true
                },
                {
                  "name": "Workflow Run",
                  "value": "[#${CI_RUN_ID}](${CI_RUN_URL})",
                  "inline": false
                }
              ],
              "url": "$CI_RUN_URL",
              "footer": {
                "text": "CodeSafe CI/CD via GitHub Actions"
              },
              "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            }]
          }
          EOF
          )
          curl -H "Content-Type: application/json" -d "$payload" $DISCORD_WEBHOOK_URL

  comment_pull_request:
    name: Comment on Pull Request if Failure
    runs-on: ubuntu-latest
    needs: [test, release_notes]
    if: failure() && github.event_name == 'pull_request'
    steps:
      - name: Comment on pull request
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: "⚠️ CI/CD failed. Please fix the issues before merging."
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
